			** ExAmour's uKernel LibOS interfaces **

SUMMARY:
 - Events classification
   - Thread specific distribution
   - Global distribution
 - Events list
   - TM events
	- Generated by threads
	- Generated by TM
   - SM events
	- Generated by threads
	- Generated by SM
   - EM events
	- Generated by threads
   - Query events
 - Message format

@ Events classification

 - Thread specific distribution
	- To the running thread
		- Exceptions

	- To non running threads
		- Registered event Predicates (for userspace drivers events)

 - Global distribution
	- SM events
	- TM events
	- Interruptions
	- User defined events

 During events forwarding, the local computer takes precedence over the network.
 Anyway, to be distributed, an event has to be embeded into a network packet event
 in order to be handled by the network driver thread.

@ Events list
 - TM events
	- Generated by threads
		- create_thread
		- delete_thread
		- yield
		- set_revoke_timeslice
		- request_timeslice

	- Generated by TM
		- revoke_timeslice

 - SM events
	- Generated by threads
		- create_segment
		- delete_segment
		- set_revoke_segment		
	
	- Generated by SM
		- revoke_segment

 - EM events
	- Generated by threads
		- want_interrupt
		- want_event
		- want_exception
		- got_interrupt
		- got_event
		- got_exception

 - Query events
	- who_is_there
	- i_am_here
	- bye_bye


@ Message format
	Encoding is little endian.
	Bit 0-1: Message category
			[0] TM
			[1] SM
			[2] EM
			[3] Query
	Bit 2-8: Message id:
		- TM
			[0] create_thread
			[1] delete_thread
			[2] yield
			[3] set_revoke_timeslice
			[4] request_timeslice
			[5] revoke_timeslice
		- SM
			[0] create_segment
			[1] delete_segment
			[2] set_revoke_segment		
			[3] revoke_segment
		- EM
			[0] want_interrupt
			[1] want_event
			[2] want_exception
			[3] got_interrupt
			[4] got_event
			[5] got_exception
			[5] create_event
			[6] delete_event
			[7] forget_event

		TODO: Where are the I/O? How to manage efficiently execption forwarding?
		      How to create user defined event?

		- Query
			[0] who_is_there
			[1] i_am_here
			[2] bye_bye		      
		TODO: Who can emit Query events? Who can answer to such events?

