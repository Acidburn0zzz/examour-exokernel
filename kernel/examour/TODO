		** exAmour's TODO **

[-] make the timer configuration and intr line proper.
[X] physical memory model
[-] cpu time consumption per process
	[X] normal runtime
	[ ] exception/interruption handler
	[ ] wakeup predicate handler
	[X] management of out of cpu envs
[X] io acquire method
[-] Default hardcoded handlers of abort/fault critical events
	[X] Double fault
	[-] Others (to be evaluated)
[X ] Kernel fallback for critical event not handled by an env
	[-] To be evaluated
[-] physical memory amount detection
	[X] Using Grub
	[ ] In real mode
[ ] boot from raw binary kernel (no boot loader)
[ ] apic
[ ] fast syscalls
[X] memory mapped io
[-] kernel monitoring
[-] kernel real idle loop
[-] yeld() syscall (allow an env to hangup)
[-] wakeup predicate model
[-] flow diagram
	[X] exception/interruption processing
	[X] env scheduling
	[ ] kernel setup
	[X] env creation
	[ ] env destruction
	[X] memory request
	[ ] memory liberation request (no memory left)
	[ ] env abort protocol (antisocial behavior protection)
	[ ] shared memory model
	[ ] system caps detection
[ ] class diagram
	[ ] memory component (physical and paged)
	[ ] io component (apic, memory mapped io, ...)
	[ ] env component
	[ ] kernel monitoring component
	[ ] code generator component
	[ ] wakeup predicate component
[ ] interaction diagram
[ ] study of the critical level from a security standpoint of the
    different components
[ ] evaluation of was must be thrown out of the kernel and why,
    everything must be explained.
[ ] study on the potential of user level dynamic syscall creation
