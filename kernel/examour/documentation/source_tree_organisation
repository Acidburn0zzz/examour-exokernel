			** exAmour's source tree organisation **

The source tree of exAmour is organised as follow:

 / -> source tree root.
 |
 |create_bootfs.sh* -> script called through mkenv to create the qemu
 |		       bootable image.
 |
 |mkenv* -> script used to setup the development environment.
 |
 |documentation/ -> technical documentations of the kernel.
 |
 |bootfs/ -> files used to build a qemu environment for kernel development.
 |
 |osdev/ -> directory where the kernel image is synchronously mounted.
 |
 |src/ -> exAmour's source code.
   |
   |AUTHORS -> Authors of the kernel.
   |
   |COPYING -> Full license text.
   |
   |TODO -> current todo list for the whole kernel.
   |
   |launch.sh* -> script used to launch the kernel in a virtual
   |		  machine (qemu or bochs).
   |
   |test/ -> directory containing some test code.
   |
   |include/ -> architecture independant headers.
   |
   |arch/
     |
     |i386/ -> x86-32 source code.
       |
       |asm/ -> assembly code of the kernel.
       | |
       | |exception.S -> exception handling code.
       | |
       | |8259a.S -> irq handling code.
       | |
       | |syscall.S -> syscall handling code.
       | |
       | |multiboot_entry.S -> Kernel entry point when bootup using
       | |		       grub (elf format).
       | |
       | |bare_entry.S -> Kernel entry point when bootup from scratch
       | 		  (raw format).
       |
       |process/ -> first userspace environment code.
       |  |
       |  |keyboard.c -> keyboard input management code.
       |  |
       |  |libos.c -> simple libos code.
       |  |
       |  |process.c -> first environment code.
       |  |
       |  |include/ -> include files of the first environment.
       |
       |examour/
       |  |
       |  |asm.h -> assembly code macros used in .S files.
       |  |
       |  |8259a.h -> PIC management macros.
       |  |
       |  |cpu_types.h -> x86 specific enumerations and structures.
       |  |
       |  |cpuid.h -> cpuid feature implementation.
       |  |
       |  |env.h -> environment's management macros, structures and
       |  |	    declarations.
       |  |
       |  |io.h -> io's management macros, structures and declarations.
       |  |
       |  |mem.h -> memory's management macros, structures and declarations.
       |  |
       |  |exception.h -> exception management macros.
       |  |
       |  |idt.h -> interrupt description table macros.
       |  |
       |  |globals.h -> kernel's global data definitions.
       |  |
       |  |irq.h -> interruptions definitions.
       |  |
       |  |lock.h -> architecture dependant locks models implementation.
       |  |
       |  |phymem.h -> physical memory model macros and function definitions.
       |  |
       |  |paging.h -> paged memory model macros and function definitions.
       |  |
       |  |reg.h -> macros to manipulate assembly operations in a more
       |  |	    convenient way.
       |  |
       |  |sched.h -> scheduler macros and function definitions.
       |  |
       |  |segment.h -> macros and functions declarations.
       |  |
       |  |syscall.h -> syscalls enumeration and generic syscall call code.
       |  |
       |  |timer.h -> timer macros.
       |  |
       |  |tty.h -> support functions and macros (to be renamed).
       |
       |main.c -> kernel C entry point.
       |
       |8259a.c -> 8259 PIC code.
       |
       |env.c -> environement management code.
       |
       |globals.c -> kernel's global data definitions.
       |
       |idt.c -> interrupt description table management code.
       |
       |io.c -> Input/Output management code.
       |
       |kernel.lds -> Kernel's linker script.
       |
       |mem.c -> generic memory management code (syscalls, memory init
       |	 and detection).
       |
       |phymem.c -> Physical memory manager code.
       |
       |paging.c -> Paged memory manager code.
       |
       |sched.c -> Scheduler code.
       |
       |timer.c -> timer code.
       |
       |tty.c -> useful functions (to be moved out).
